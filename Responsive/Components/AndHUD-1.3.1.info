{"Name":"AndHUD","Id":598,"Alias":"AndHUD","Description":"AndHUD\n==========\n\nAndHUD is a Progress / HUD library for Android which allows you to easily add amazing HUDs to your app!\n\nFeatures\n--------\n - Spinner (with and without Text)\n - Progress (with and without Text)\n - Image (with and without Text)\n - Success / Error (with and without Text)\n - Toasts\n - Xamarin.Android Support\n - Xamarin Component store\n - Similar API and functionality to BTProgressHUD for iOS\n - XHUD Optional API that is in parity with BTProgressHUD\u0027s XHUD API\n \n\nQuick and Simple\n----------------\n```csharp\n//Show a simple status message with an indeterminate spinner and a Clear background\nAndHUD.Shared.Show(myActivity, \"Status Message\", MaskType.Clear);\n\n//Show a progress with a filling circle representing the progress amount, showing 60% full\nAndHUD.Shared.ShowProgress(myActivity, \"Loading… 60%\", 60);\n\n//Show a success image with a message, with a Clear background, and auto-dismiss after 2 seconds\nAndHUD.Shared.ShowSuccess(myActivity, \"It Worked!\", MaskType.Clear, TimeSpan.FromSeconds(2));\n```\n\n\nThanks\n------\nThanks to Nic Wise (@fastchicken) who inspired the creation of this with his component BTProgressHUD https://components.xamarin.com/view/btprogresshud/\n\nIt was so awesome for iOS that I needed to have it on Android as well :)\n\n","Version":"1.3.1","Summary":"Add amazing HUDs to your Android apps.","QuickStart":"AndHUD\n=======\nBy default AndHUD is accessible through the AndHUD.Shared static instance of the class.  You are also free to create an instance of AndHUD and use it yourself!  \n\n\nGetting Started\n---------------\n```csharp\n//Show a simple status message with an indeterminate spinner and a Clear background\nAndHUD.Shared.Show(myActivity, \"Status Message\", MaskType.Clear);\n\n//Show a progress with a filling circle representing the progress amount, showing 60% full\nAndHUD.Shared.ShowProgress(myActivity, \"Loading… 60%\", 60);\n\n//Show a success image with a message, with a Clear background, and auto-dismiss after 2 seconds\nAndHUD.Shared.ShowSuccess(myActivity, \"It Worked!\", MaskType.Clear, TimeSpan.FromSeconds(2));\n\n//Show an error image with a message with a Dimmed background, and auto-dismiss after 2 seconds\nAndHUD.Shared.ShowError(myActivity, \"It no worked :(\", MaskType.Black, TimeSpan.FromSeconds(2));\n\n//Show a toast, similar to Android toasts, but styled as AndHUD, with a clear background, auto-dismiss after 2 seconds\nAndHUD.Shared.ShowToast(myActivity, \"This is a non-centered Toast…\", MaskType.Clear, TimeSpan.FromSeconds(2));\n\n//Show a custom image with text\nAndHUD.Shared.ShowImage(myActivity, Resource.Drawable.MyCustomImage, \"Custom\");\n\n//Dismiss a HUD that will or will not be automatically timed out\nAndHUD.Shared.Dismiss(myActivity);\n\n//Show a HUD and only close it when it\u0027s clicked\nAndHUD.Shared.ShowToast(this, \"Click this toast to close it!\", MaskType.Clear, null, true, () =\u003e AndHUD.Shared.Dismiss(this));\n```\n\nOther Options\n-------------\n - **MaskType:** By default, MaskType.Black dims the background behind the HUD.  Use MaskType.Clear to prevent the dimming.  Use MaskType.None to allow interaction with views behind the HUD.\n - **Timeout:** If you provide a timeout, the HUD will automatically be dismissed after the timeout elapses, if you have not already dismissed it manually.\n - **Click Callback:** If you provide a clickCallback parameter, when the HUD is tapped by the user, the action supplied will be executed.\n - **Cancel Callback:** If you provide a cancelCallback parameter, the HUD can be cancelled by the user pressing the back button, which will cause the cancelCallback action to be executed.\n\n","Hash":"f4f320c97af116037eb7aba08ed3a16f","TargetPlatforms":["android"],"TrialHash":null}